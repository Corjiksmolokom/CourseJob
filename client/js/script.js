// Mock data for categories
const categories = [
    {
        id: 1,
        name: '–ö–µ—Ä–∞–º–∏–∫–∞',
        count: 124,
        icon: 'üè∫'
    },
    {
        id: 2,
        name: '–£–∫—Ä–∞—à–µ–Ω–∏—è',
        count: 89,
        icon: 'üíé'
    },
    {
        id: 3,
        name: '–¢–µ–∫—Å—Ç–∏–ª—å',
        count: 156,
        icon: 'üß∂'
    },
    {
        id: 4,
        name: '–î–µ—Ä–µ–≤–æ',
        count: 73,
        icon: 'ü™µ'
    },
    {
        id: 5,
        name: '–ú—ã–ª–æ',
        count: 45,
        icon: 'üßº'
    },
    {
        id: 6,
        name: '–°–≤–µ—á–∏',
        count: 62,
        icon: 'üïØÔ∏è'
    },
    {
        id: 7,
        name: '–ò–≥—Ä—É—à–∫–∏',
        count: 38,
        icon: 'üß∏'
    },
    {
        id: 8,
        name: '–ö–∞—Ä—Ç–∏–Ω—ã',
        count: 91,
        icon: 'üé®'
    }
];

// Mock data for products
const products = [
    {
        id: 1,
        name: '–ö–µ—Ä–∞–º–∏—á–µ—Å–∫–∞—è –≤–∞–∑–∞ "–ó–∞–∫–∞—Ç"',
        description: '–£–Ω–∏–∫–∞–ª—å–Ω–∞—è –≤–∞–∑–∞ —Ä—É—á–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º –∑–∞–∫–∞—Ç–∞. –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –∂–∏–≤—ã—Ö —Ü–≤–µ—Ç–æ–≤.',
        price: 3500,
        image: 'ceramic-vase.jpg',
        category: '–ö–µ—Ä–∞–º–∏–∫–∞',
        author: '–ú–∞—Ä–∏—è –ü–µ—Ç—Ä–æ–≤–∞',
        inStock: true
    },
    {
        id: 2,
        name: '–°–µ—Ä–µ–±—Ä—è–Ω–æ–µ –∫–æ–ª—å—Ü–æ —Å –∞–º–µ—Ç–∏—Å—Ç–æ–º',
        description: '–≠–ª–µ–≥–∞–Ω—Ç–Ω–æ–µ –∫–æ–ª—å—Ü–æ –∏–∑ —Å–µ—Ä–µ–±—Ä–∞ 925 –ø—Ä–æ–±—ã —Å –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–º –∞–º–µ—Ç–∏—Å—Ç–æ–º.',
        price: 4200,
        image: 'silver-ring.jpg',
        category: '–£–∫—Ä–∞—à–µ–Ω–∏—è',
        author: '–ê–Ω–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞',
        inStock: true
    },
    {
        id: 3,
        name: '–í—è–∑–∞–Ω—ã–π –ø–ª–µ–¥ "–û–±–ª–∞–∫–∞"',
        description: '–ú—è–≥–∫–∏–π –ø–ª–µ–¥ –∏–∑ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–π —à–µ—Ä—Å—Ç–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–π –≤—Ä—É—á–Ω—É—é. –†–∞–∑–º–µ—Ä 150x200 —Å–º.',
        price: 5800,
        image: 'knitted-blanket.jpg',
        category: '–¢–µ–∫—Å—Ç–∏–ª—å',
        author: '–ï–ª–µ–Ω–∞ –ö–æ–∑–ª–æ–≤–∞',
        inStock: true
    },
    {
        id: 4,
        name: '–î–µ—Ä–µ–≤—è–Ω–Ω–∞—è —à–∫–∞—Ç—É–ª–∫–∞',
        description: '–†–µ–∑–Ω–∞—è —à–∫–∞—Ç—É–ª–∫–∞ –∏–∑ –º–∞—Å—Å–∏–≤–∞ –¥—É–±–∞ —Å –∏–Ω–∫—Ä—É—Å—Ç–∞—Ü–∏–µ–π. –†—É—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞.',
        price: 2900,
        image: 'wooden-box.jpg',
        category: '–î–µ—Ä–µ–≤–æ',
        author: '–ò–≥–æ—Ä—å –í–æ–ª–∫–æ–≤',
        inStock: true
    },
    {
        id: 5,
        name: '–ù–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ –º—ã–ª–æ "–õ–∞–≤–∞–Ω–¥–∞"',
        description: '–ú—ã–ª–æ —Ä—É—á–Ω–æ–π –≤–∞—Ä–∫–∏ —Å —ç—Ñ–∏—Ä–Ω—ã–º –º–∞—Å–ª–æ–º –ª–∞–≤–∞–Ω–¥—ã –∏ —Å—É—à–µ–Ω—ã–º–∏ —Ü–≤–µ—Ç–∞–º–∏.',
        price: 450,
        image: 'lavender-soap.jpg',
        category: '–ú—ã–ª–æ',
        author: '–û–ª—å–≥–∞ –ù–æ–≤–∏–∫–æ–≤–∞',
        inStock: true
    },
    {
        id: 6,
        name: '–°–æ–µ–≤–∞—è —Å–≤–µ—á–∞ "–£—é—Ç"',
        description: '–ê—Ä–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–≤–µ—á–∞ –∏–∑ —Å–æ–µ–≤–æ–≥–æ –≤–æ—Å–∫–∞ —Å –∑–∞–ø–∞—Ö–æ–º –≤–∞–Ω–∏–ª–∏ –∏ –∫–æ—Ä–∏—Ü—ã.',
        price: 890,
        image: 'soy-candle.jpg',
        category: '–°–≤–µ—á–∏',
        author: '–î–∞—Ä—å—è –ë–µ–ª–æ–≤–∞',
        inStock: true
    },
    {
        id: 7,
        name: '–ú—è–≥–∫–∞—è –∏–≥—Ä—É—à–∫–∞ "–ú–∏—à–∫–∞ –¢–µ–¥–¥–∏"',
        description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –º–∏—à–∫–∞ –¢–µ–¥–¥–∏ —Ä—É—á–Ω–æ–π —Ä–∞–±–æ—Ç—ã –∏–∑ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–≥–æ –ø–ª—é—à–∞.',
        price: 1850,
        image: 'teddy-bear.jpg',
        category: '–ò–≥—Ä—É—à–∫–∏',
        author: '–°–≤–µ—Ç–ª–∞–Ω–∞ –û—Ä–ª–æ–≤–∞',
        inStock: true
    },
    {
        id: 8,
        name: '–ê–∫–≤–∞—Ä–µ–ª—å "–í–µ—Å–µ–Ω–Ω–∏–π —Å–∞–¥"',
        description: '–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è –∞–∫–≤–∞—Ä–µ–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∏–Ω–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º —Ü–≤–µ—Ç—É—â–µ–≥–æ —Å–∞–¥–∞.',
        price: 7500,
        image: 'watercolor-garden.jpg',
        category: '–ö–∞—Ä—Ç–∏–Ω—ã',
        author: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –í–∞—Å–∏–ª—å–µ–≤',
        inStock: true
    },
    {
        id: 9,
        name: '–ö–µ—Ä–∞–º–∏—á–µ—Å–∫–∞—è —Ç–∞—Ä–µ–ª–∫–∞',
        description: '–î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω–∞—è —Ç–∞—Ä–µ–ª–∫–∞ —Å —Ä—É—á–Ω–æ–π —Ä–æ—Å–ø–∏—Å—å—é –≤ —ç—Ç–Ω–∏—á–µ—Å–∫–æ–º —Å—Ç–∏–ª–µ.',
        price: 1200,
        image: 'ceramic-plate.jpg',
        category: '–ö–µ—Ä–∞–º–∏–∫–∞',
        author: '–ú–∞—Ä–∏—è –ü–µ—Ç—Ä–æ–≤–∞',
        inStock: true
    }
];

// Application state
let cart = [];
let favorites = [];
let displayedProducts = 6;
let filteredProducts = [...products];

// DOM elements
const categoriesGrid = document.getElementById('categoriesGrid');
const productsGrid = document.getElementById('productsGrid');
const searchInput = document.getElementById('searchInput');
const searchBtn = document.getElementById('searchBtn');
const loadMoreBtn = document.getElementById('loadMoreBtn');
const scrollTopBtn = document.getElementById('scrollTopBtn');
const cartBtn = document.getElementById('cartBtn');
const cartCount = document.querySelector('.cart-count');
const telegramBtn = document.getElementById('telegramBtn');

// Initialize the application
document.addEventListener('DOMContentLoaded', function() {
    renderCategories();
    renderProducts();
    setupEventListeners();
    updateCartCount();
});

// Render categories
function renderCategories() {
    categoriesGrid.innerHTML = categories.map(category => `
        <div class="category-card fade-in" data-category="${category.name}" onclick="filterByCategory('${category.name}')">
            <div class="category-icon">${category.icon}</div>
            <div class="category-name">${category.name}</div>
            <div class="category-count">${category.count} —Ç–æ–≤–∞—Ä–æ–≤</div>
        </div>
    `).join('');
}

// Render products
function renderProducts() {
    const productsToShow = filteredProducts.slice(0, displayedProducts);

    productsGrid.innerHTML = productsToShow.map(product => `
        <div class="product-card bounce-in">
            <div class="product-image"></div>
            <div class="product-info">
                <div class="product-price">${formatPrice(product.price)} ‚ÇΩ</div>
                <div class="product-name">${product.name}</div>
                <div class="product-description">${product.description}</div>
                <div class="product-actions">
                    <button class="add-to-cart-btn" onclick="addToCart(${product.id})">
                        –í –∫–æ—Ä–∑–∏–Ω—É
                    </button>
                    <button class="favorite-btn ${favorites.includes(product.id) ? 'active' : ''}"
                            onclick="toggleFavorite(${product.id})">
                        ‚ô°
                    </button>
                </div>
            </div>
        </div>
    `).join('');

    // Update load more button visibility
    if (displayedProducts >= filteredProducts.length) {
        loadMoreBtn.style.display = 'none';
    } else {
        loadMoreBtn.style.display = 'block';
    }
}

// Format price with spaces
function formatPrice(price) {
    return price.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ' ');
}

// Add to cart functionality
function addToCart(productId) {
    const product = products.find(p => p.id === productId);
    if (product) {
        const existingItem = cart.find(item => item.id === productId);
        if (existingItem) {
            existingItem.quantity += 1;
        } else {
            cart.push({ ...product, quantity: 1 });
        }
        updateCartCount();
        showNotification(`${product.name} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É`);
    }
}

// Toggle favorite
function toggleFavorite(productId) {
    const index = favorites.indexOf(productId);
    if (index > -1) {
        favorites.splice(index, 1);
    } else {
        favorites.push(productId);
    }
    renderProducts();

    const product = products.find(p => p.id === productId);
    const action = favorites.includes(productId) ? '–¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ' : '—É–¥–∞–ª–µ–Ω –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ';
    showNotification(`${product.name} ${action}`);
}

// Update cart count
function updateCartCount() {
    const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
    cartCount.textContent = totalItems;
}

// Filter by category
function filterByCategory(categoryName) {
    if (categoryName === '–í—Å–µ') {
        filteredProducts = [...products];
    } else {
        filteredProducts = products.filter(product => product.category === categoryName);
    }
    displayedProducts = 6;
    renderProducts();

    // Scroll to products section
    document.querySelector('.products-section').scrollIntoView({
        behavior: 'smooth'
    });
}

// Search functionality
function performSearch() {
    const query = searchInput.value.toLowerCase().trim();

    if (query === '') {
        filteredProducts = [...products];
    } else {
        filteredProducts = products.filter(product =>
            product.name.toLowerCase().includes(query) ||
            product.description.toLowerCase().includes(query) ||
            product.category.toLowerCase().includes(query) ||
            product.author.toLowerCase().includes(query)
        );
    }

    displayedProducts = 6;
    renderProducts();

    if (query !== '') {
        showNotification(`–ù–∞–π–¥–µ–Ω–æ ${filteredProducts.length} —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∑–∞–ø—Ä–æ—Å—É "${query}"`);
    }
}

// Load more products
function loadMoreProducts() {
    displayedProducts += 6;
    renderProducts();
}

// Scroll to top
function scrollToTop() {
    window.scrollTo({
        top: 0,
        behavior: 'smooth'
    });
}

// Show notification
function showNotification(message) {
    // Create notification element
    const notification = document.createElement('div');
    notification.style.cssText = `
        position: fixed;
        top: 100px;
        right: 20px;
        background: linear-gradient(135deg, #ff6b9d, #ff8cc8);
        color: white;
        padding: 16px 24px;
        border-radius: 12px;
        box-shadow: 0 4px 20px rgba(255, 107, 157, 0.3);
        z-index: 10000;
        font-weight: 500;
        transform: translateX(100%);
        transition: transform 0.3s ease;
    `;
    notification.textContent = message;

    document.body.appendChild(notification);

    // Animate in
    setTimeout(() => {
        notification.style.transform = 'translateX(0)';
    }, 100);

    // Remove after 3 seconds
    setTimeout(() => {
        notification.style.transform = 'translateX(100%)';
        setTimeout(() => {
            document.body.removeChild(notification);
        }, 300);
    }, 3000);
}

// Setup event listeners
function setupEventListeners() {
    // Search functionality
    searchBtn.addEventListener('click', performSearch);
    searchInput.addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
            performSearch();
        }
    });

    // Load more button
    loadMoreBtn.addEventListener('click', loadMoreProducts);

    // Scroll to top button
    scrollTopBtn.addEventListener('click', scrollToTop);

    // Telegram bot button
    telegramBtn.addEventListener('click', function() {
        showNotification('–¢–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω!');
    });

    // Cart button
    cartBtn.addEventListener('click', function() {
        if (cart.length === 0) {
            showNotification('–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞');
        } else {
            showNotification(`–í –∫–æ—Ä–∑–∏–Ω–µ ${cart.length} —Ç–æ–≤–∞—Ä–æ–≤`);
        }
    });

    // Profile and favorites buttons
    document.getElementById('profileBtn').addEventListener('click', function() {
        showNotification('–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ');
    });

    document.getElementById('favoritesBtn').addEventListener('click', function() {
        if (favorites.length === 0) {
            showNotification('–°–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—É—Å—Ç');
        } else {
            showNotification(`–í –∏–∑–±—Ä–∞–Ω–Ω–æ–º ${favorites.length} —Ç–æ–≤–∞—Ä–æ–≤`);
        }
    });

    // Header scroll effect
    let lastScrollTop = 0;
    window.addEventListener('scroll', function() {
        const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
        const header = document.querySelector('.header');

        if (scrollTop > lastScrollTop && scrollTop > 100) {
            // Scrolling down
            header.style.transform = 'translateY(-100%)';
        } else {
            // Scrolling up
            header.style.transform = 'translateY(0)';
        }

        lastScrollTop = scrollTop;

        // Show/hide scroll to top button
        if (scrollTop > 300) {
            scrollTopBtn.style.display = 'flex';
        } else {
            scrollTopBtn.style.display = 'none';
        }
    });

    // Add "All categories" option
    const allCategoriesCard = document.createElement('div');
    allCategoriesCard.className = 'category-card fade-in';
    allCategoriesCard.innerHTML = `
        <div class="category-icon">üéØ</div>
        <div class="category-name">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</div>
        <div class="category-count">${products.length} —Ç–æ–≤–∞—Ä–æ–≤</div>
    `;
    allCategoriesCard.addEventListener('click', () => filterByCategory('–í—Å–µ'));
    categoriesGrid.insertBefore(allCategoriesCard, categoriesGrid.firstChild);
}

// Add some interactive features
document.addEventListener('mousemove', function(e) {
    const heroGradient = document.querySelector('.hero-gradient');
    if (heroGradient) {
        const x = (e.clientX / window.innerWidth) * 100;
        const y = (e.clientY / window.innerHeight) * 100;
        heroGradient.style.background = `radial-gradient(circle at ${x}% ${y}%, rgba(255, 107, 157, 0.3) 0%, rgba(255, 140, 200, 0.2) 50%, transparent 100%)`;
    }
});

// Add keyboard shortcuts
document.addEventListener('keydown', function(e) {
    // Ctrl/Cmd + K for search
    if ((e.ctrlKey || e.metaKey) && e.key === 'k') {
        e.preventDefault();
        searchInput.focus();
    }

    // Escape to clear search
    if (e.key === 'Escape' && document.activeElement === searchInput) {
        searchInput.value = '';
        performSearch();
        searchInput.blur();
    }
});

// Add some fun easter eggs
let clickCount = 0;
document.querySelector('.logo h1').addEventListener('click', function() {
    clickCount++;
    if (clickCount === 5) {
        showNotification('üéâ –°–µ–∫—Ä–µ—Ç–Ω—ã–π —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! üéâ');
        document.body.style.animation = 'rainbow 2s infinite';
        setTimeout(() => {
            document.body.style.animation = '';
            clickCount = 0;
        }, 2000);
    }
});

// Add CSS for rainbow animation
const style = document.createElement('style');
style.textContent = `
    @keyframes rainbow {
        0% { filter: hue-rotate(0deg); }
        100% { filter: hue-rotate(360deg); }
    }
`;
document.head.appendChild(style);